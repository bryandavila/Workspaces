@model Workpaces.Models.Reserva

@{
    ViewBag.Title = "Crear reservación";
}
<body >
    <h2>Crear reservación</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Reserva</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
           
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoraInicio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoraInicio, new { htmlAttributes = new { @class = "form-control", type = "time", min = "09:00", max = "18:00" } })
            @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoraFin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoraFin, new { htmlAttributes = new { @class = "form-control", type = "time", min = "09:00", max = "18:00" } })
            @Html.ValidationMessageFor(model => model.HoraFin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SalaId, "Sala", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SalaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SalaId, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        @Html.LabelFor(model => model.Estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Estado, new List<SelectListItem>
            {
                new SelectListItem { Text = "Pendiente", Value = "Pendiente" },
                new SelectListItem { Text = "Aprobada", Value = "Aprobada" },
                new SelectListItem { Text = "Cancelada", Value = "Cancelada" }
            }, "Seleccione un estado", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.UsuarioId, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (User.IsInRole("Admin"))
            {
                @Html.DropDownList("UsuarioId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsuarioId, "", new { @class = "text-danger" })

            }
            else
            {

                @Html.Hidden("UsuarioId", (string)ViewBag.Id)

                <p>@User.Identity.Name</p>
            }


        </div>
    </div>
    <br>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-primary" />|
            @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>
    }
</body>

